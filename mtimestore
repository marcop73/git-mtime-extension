#!/bin/bash

function usage 
{
  echo "Usage: mtimestore (-a|-s|-r)"
  echo "Option  Meaning"
  echo " -a save-all - saves state of all files in a git repository"
  echo " -A save-all - as -a, but restricts the date to the newest author-date of the file"
  echo " -s save - saves mtime of all staged files of git repository"
  echo " -r restore - touches all files saved in .mtimes file"
  echo "version 1.6"
  exit 1
}

function echodate 
{
  case `uname -s` in
      "Linux" ) [[ -e "$1" ]] && echo "$(stat -c %Y "$1")|$1" >> .mtimes;;
      "Darwin" ) [[ -e "$1" ]] && echo "$(stat -f %m "$1")|$1" >> .mtimes;;
  esac
}

function echodate_restricted
{
  [[ -e "$1" ]] || return 0

  case `uname -s` in
    "Linux" ) MT="$(stat -c %Y "$1")";;
    "Darwin" ) MT="$(stat -f %m "$1")";;
  esac

  REV=$(git rev-list -n 1 HEAD "$1")
  MA="$(git show --pretty=format:%at --abbrev-commit "$REV" | head -n 1)"
  MIN="$MT"
  [ "$MA" -lt "$MT" ] && MIN="$MA"
  echo "$MIN|$1" >> .mtimes
}

IFS=$'\n'

while getopts ":sAar" optname
do
  case "$optname" in
    "s")
      echo "saving changes of staged files to file .mtimes"
      if [ -f .mtimes ]
      then
        mv .mtimes .mtimes_tmp
        pattern=".mtimes"
        for str in $(git diff --name-only --staged)
        do
          pattern="$pattern\|$str"
        done
        cat .mtimes_tmp | grep -vh "|\($pattern\)\b" >> .mtimes
      else
        echo "warning: file .mtimes does not exist - creating new"
      fi

      for str in $(git diff --name-only --staged)
      do
        echodate "$str" 
      done
      rm .mtimes_tmp 2> /dev/null
      ;;
    "a"|"A")
      echo "saving mtimes of all files to file .mtimes"
      rm .mtimes 2> /dev/null
      while IFS='' read -r -d '' file
      do
        [[ $file = .mtimes ]] && continue
        if [ "$optname" == "a" ]
        then
          echodate "$file"
        else
          echodate_restricted "$file"
        fi
      done < <(git ls-files -z)
      ;;
    "r")
      echo "restoring dates from .mtimes"
      if [ -f .mtimes ]
      then
        cat .mtimes | while read line
        do
          case `uname -s` in
              "Linux" ) timestamp=$(date -d "1970-01-01 ${line%|*} sec GMT" +%Y%m%d%H%M.%S);;

              "Darwin" ) timestamp=$(date -r ${line%|*} +%Y%m%d%H%M.%S);;
          esac
          touch -c -t $timestamp "${line##*|}"
        done
      else
        echo "warning: .mtimes not found"
      fi
      ;;
    ":")
      usage
      ;;
    *)
      usage
      ;;
esac
done
exit 0

